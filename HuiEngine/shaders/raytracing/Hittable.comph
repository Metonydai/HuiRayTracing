#ifndef HL_HITTABLE
#define HL_HITTABLE
#include "PointerEx.Comph"
#include "Ray.comph"
#include "HitRecord.comph"

const struct
{
    uint None;
    uint TriangleMesh;
    uint Sphere;
    uint Quad;
} HittableEnum = {0,1,2,3};

struct Hittable
{
    uint type;
    uint ptr;
    uint mat;
};

struct Sphere
{
    vec3 center;
    float radius;
};

struct Quad
{
    vec3 Q;
    vec3 u;
    vec3 v;
};

Interface
void Deref(out Hittable hittable, Pointer ptr);
Interface
void Deref(Hittable hittable, out vec4 data, Pointer ptr);

//entrance
bool HitAny(uint count, Ray r, float t_min, float t_max, out HitRecord rec);

//disptacher
bool Hit(Hittable hittable, Ray r, float t_min, float t_max, out HitRecord rec);

void Init(inout Sphere self, vec3 center, float radius);
bool Hit(Sphere self, Ray r, float t_min, float t_max, out HitRecord rec);

void Init(inout Quad self, vec3 Q, vec3 u, vec3 v);
bool Hit(Quad self, Ray r, float t_min, float t_max, out HitRecord rec);
bool IsInterior(float a, float b);

#endif